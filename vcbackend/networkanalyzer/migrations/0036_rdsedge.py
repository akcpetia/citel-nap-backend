# Generated by Django 4.1.7 on 2023-02-16 02:09

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("networkanalyzer", "0035_alter_edge_activationtime_alter_edge_created"),
    ]

    operations = [
        migrations.CreateModel(
            name="RDSEdge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.BigIntegerField(blank=True, null=True)),
                (
                    "edgeid",
                    models.BigIntegerField(blank=True, db_column="edgeId", null=True),
                ),
                ("created", models.TextField(blank=True, null=True)),
                (
                    "enterpriseid",
                    models.BigIntegerField(
                        blank=True, db_column="enterpriseId", null=True
                    ),
                ),
                (
                    "siteid",
                    models.BigIntegerField(blank=True, db_column="siteId", null=True),
                ),
                (
                    "activationkey",
                    models.TextField(blank=True, db_column="activationKey", null=True),
                ),
                (
                    "activationkeyexpires",
                    models.TextField(
                        blank=True, db_column="activationKeyExpires", null=True
                    ),
                ),
                (
                    "activationstate",
                    models.TextField(
                        blank=True, db_column="activationState", null=True
                    ),
                ),
                (
                    "activationtime",
                    models.TextField(blank=True, db_column="activationTime", null=True),
                ),
                (
                    "softwareversion",
                    models.TextField(
                        blank=True, db_column="softwareVersion", null=True
                    ),
                ),
                (
                    "buildnumber",
                    models.TextField(blank=True, db_column="buildNumber", null=True),
                ),
                (
                    "factorysoftwareversion",
                    models.TextField(
                        blank=True, db_column="factorySoftwareVersion", null=True
                    ),
                ),
                (
                    "factorybuildnumber",
                    models.TextField(
                        blank=True, db_column="factoryBuildNumber", null=True
                    ),
                ),
                (
                    "softwareupdated",
                    models.TextField(
                        blank=True, db_column="softwareUpdated", null=True
                    ),
                ),
                (
                    "selfmacaddress",
                    models.TextField(blank=True, db_column="selfMacAddress", null=True),
                ),
                (
                    "deviceid",
                    models.TextField(blank=True, db_column="deviceId", null=True),
                ),
                (
                    "logicalid",
                    models.TextField(blank=True, db_column="logicalId", null=True),
                ),
                (
                    "serialnumber",
                    models.TextField(blank=True, db_column="serialNumber", null=True),
                ),
                (
                    "modelnumber",
                    models.TextField(blank=True, db_column="modelNumber", null=True),
                ),
                (
                    "devicefamily",
                    models.TextField(blank=True, db_column="deviceFamily", null=True),
                ),
                ("name", models.TextField(blank=True, null=True)),
                (
                    "dnsname",
                    models.TextField(blank=True, db_column="dnsName", null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "alertsenabled",
                    models.BigIntegerField(
                        blank=True, db_column="alertsEnabled", null=True
                    ),
                ),
                (
                    "operatoralertsenabled",
                    models.BigIntegerField(
                        blank=True, db_column="operatorAlertsEnabled", null=True
                    ),
                ),
                (
                    "edgestate",
                    models.TextField(blank=True, db_column="edgeState", null=True),
                ),
                (
                    "edgestatetime",
                    models.TextField(blank=True, db_column="edgeStateTime", null=True),
                ),
                (
                    "islive",
                    models.BigIntegerField(blank=True, db_column="isLive", null=True),
                ),
                (
                    "systemupsince",
                    models.TextField(blank=True, db_column="systemUpSince", null=True),
                ),
                (
                    "serviceupsince",
                    models.TextField(blank=True, db_column="serviceUpSince", null=True),
                ),
                (
                    "lastcontact",
                    models.TextField(blank=True, db_column="lastContact", null=True),
                ),
                (
                    "servicestate",
                    models.TextField(blank=True, db_column="serviceState", null=True),
                ),
                (
                    "endpointpkimode",
                    models.TextField(
                        blank=True, db_column="endpointPkiMode", null=True
                    ),
                ),
                (
                    "hastate",
                    models.TextField(blank=True, db_column="haState", null=True),
                ),
                (
                    "hapreviousstate",
                    models.TextField(
                        blank=True, db_column="haPreviousState", null=True
                    ),
                ),
                (
                    "halastcontact",
                    models.TextField(blank=True, db_column="haLastContact", null=True),
                ),
                (
                    "haserialnumber",
                    models.TextField(blank=True, db_column="haSerialNumber", null=True),
                ),
                ("modified", models.TextField(blank=True, null=True)),
                (
                    "custominfo",
                    models.TextField(blank=True, db_column="customInfo", null=True),
                ),
                (
                    "issoftwareversionsupportedbyvco",
                    models.BooleanField(
                        blank=True,
                        db_column="isSoftwareVersionSupportedByVco",
                        null=True,
                    ),
                ),
                (
                    "ishub",
                    models.BooleanField(blank=True, db_column="isHub", null=True),
                ),
                ("ha", models.TextField(blank=True, null=True)),
                ("vnfs", models.TextField(blank=True, null=True)),
                ("site_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "bastionstate",
                    models.TextField(blank=True, db_column="bastionState", null=True),
                ),
                ("summary", models.TextField(blank=True, null=True)),
            ],
            options={"db_table": "edge", "managed": False,},
        ),
    ]
